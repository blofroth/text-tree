#!/bin/bash

CMD="$1"

notes_dir=${DAYNOTE_DIR:-~/notes}
daynote="$(date -Idate).txt"

create() {
  mkdir -p "$notes_dir"
}

print_usage() {
cat << EOF
Usage: $1 COMMAND [OPTIONS]

Commands:
  create    create the specified or default NOTE_DIR
  filter    filter NOTE_PATTERN notes according to MARKERS
  daynote   create and print path to current day note
  migrate   migrate 

Flags: 
  --note-pattern NOTE_PATTERN note filename glob pattern
                              default: *
  --markers MARKERS           note marker regex pattern
                              default: '[*!?-]' ("open" items)
  --note-directory NOTE_DIR   day-notes directory or \$DAYNOTE_DIR
                              default: '~/notes'
  --today                     set note pattern to current day-note
  --help -h                   display this help text

Marker guidance (suggestion):
 * TODO item
 # Completed item
 - Info item
 ! Blocked item
 X Cancelled item
 ? Maybe TODO / nice to have
 | Quote/verbatim line 
EOF
}

set -e -o pipefail

script_dir="$( cd -- "$(dirname "$0")" >/dev/null 2>&1 ; pwd -P )"

note_pattern="*"

# 'open' items only by default
markers="[*!?-]"

if [[ $# == 0 ]]; then
  echo "No command given"
  print_usage
  exit 1
fi

while [[ $# > 0 ]]
do
  case "$1" in
  create|filter|daynote|migrate|archive|diff-archive)
    mode="$1"
    shift # command
    ;;
  --note-pattern|-n)
    shift # flag
    note_pattern="$1"
    shift # value
    ;;
  --note-directory|-d)
    shift # flag
    notes_dir="$1"
    shift # value
    ;;
  --markers)
    shift # flag
    markers="$1"
    shift # value
    ;;
  --to-note)
    shift # flag
    daynote="$1"
    shift # value
    ;;
  --today)
    shift # flag
    note_pattern="$daynote"
    ;;
  --help|-h)
    shift # flag
    print_usage
    exit 0
    ;;
  *)
    echo "Unknown argument: '$1'"
    print_usage
    exit 1
    ;;
  esac
done

case $mode in
  create)
    create
    ;;
  daynote)
    touch "$notes_dir/$daynote"
    echo "$notes_dir/$daynote"
    ;;
  filter)
    create
    notes="$(ls "$notes_dir"/$note_pattern)"
    awk -f "${script_dir}/filter.awk" -v "mq=$markers"  $notes
    ;;
  migrate)
    create
    last_note="$(ls "$notes_dir"/[0-9]*.txt | sort | tail -n 1)"
    notes="$(ls "$notes_dir"/$note_pattern)"
    echo >> "$notes_dir/$daynote"
    echo " - Migrated from $last_note" >> "$notes_dir/$daynote"
    awk -f "${script_dir}/filter.awk" -v "mq=$markers" "$last_note" >> "$notes_dir/$daynote"
    echo "-- Migrated notes from '$last_note' to:"
    echo "$notes_dir/$daynote"
    ;;
  archive)
    ARCHIVE_FILENAME="${daynote}.$(date +%s).archive"
    echo " -- Saving archived copy $ARCHIVE_FILENAME"
    cp "$notes_dir/$daynote" "$notes_dir/$ARCHIVE_FILENAME"

    echo " -- Filtering for markers in '$daynote'"
    archive_note="$notes_dir/$daynote"
    awk -f "${script_dir}/filter.awk" -v "mq=$markers" "$archive_note" > "${archive_note}.tmp"
    mv "${archive_note}.tmp" "$archive_note"
    ;;
  diff-archive)
    first_day_archive="$(ls "$notes_dir/${daynote}"*.archive | sort | head -n 1)"
    diff -C 3 --color=always "$first_day_archive" "$notes_dir/$daynote"
    ;;
  *)
    echo "Unknown command: $1"
    exit 1
    ;;
esac